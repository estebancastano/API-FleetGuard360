Descripción de Paquetes
1. Seguridad
•	Propósito: Gestiona la autenticación de usuarios administradores mediante credenciales. Valida acceso y controla intentos fallidos.
•	Relación con otros:
o	Es utilizado por el paquete Acceso, específicamente por VentanaAcceso para validar el inicio de sesión.

2. Acceso
•	Propósito: Controla la navegación hacia los paneles de flotas (activas/inactivas) una vez autenticado el usuario.
•	Relación con otros:
o	Depende de Seguridad para verificar credenciales.
o	Es utilizado por el paquete Flotas para acceder a los distintos paneles.

3. Flotas
•	Propósito: Gestiona la visualización general e individual de las flotas activas/inactivas, incluyendo ordenamientos, filtros y actualizaciones.
•	Relación con otros:
o	Depende de Acceso para iniciar la navegación.
o	Utiliza el paquete Dashboard para mostrar KPIs.
o	Utiliza Alertas para presentar anomalías en tiempo real.

4. Reportes
•	Propósito: Permite a los administradores generar informes operativos con KPIs, alertas y desempeño de flotas. Soporta exportación a PDF y Excel.
•	Relación con otros:
o	Depende de Flotas (fuente de datos).
o	Depende de Alertas para notificar anomalías.
o	Utiliza Infraestructura para exportar archivos y consultar la base de datos.

5. Dashboard
•	Propósito: Muestra indicadores visuales clave (KPIs) como velocidad, ubicación, alertas y cumplimiento en tiempo real.
•	Relación con otros:
o	Es utilizado por Flotas (PanelGeneral) para presentar información contextual.
o	Depende de Infraestructura (BaseDeDatos) para acceder a los datos de monitoreo.

6. Alertas
•	Propósito: Sistema autónomo que analiza eventos e información en tiempo real para generar alertas por anomalías o incumplimientos.
•	Relación con otros:
o	Es utilizado por Flotas y Reportes para mostrar o generar alertas.
o	Depende de Flotas para conocer el estado de operación de cada unidad.

7. Infraestructura
•	Propósito: Contiene servicios técnicos compartidos como la API REST, base de datos del sistema, y los servicios de exportación (PDF/Excel).
•	Relación con otros:
o	Es utilizada por casi todos los paquetes (Reportes, Dashboard, Flotas, etc.).
o	Proporciona los medios para almacenamiento, comunicación y exportación.

--------------------------------------------------------------------------------------------------------------------

Descripción de Componentes
Este diagrama de componentes ilustra la arquitectura lógica de un sistema, dividiéndolo en módulos con responsabilidades claras y definiendo cómo interactúan entre sí a través de interfaces bien definidas.

1. Componente: Seguridad
•	Responsabilidades: 
o	Gestionar el proceso de autenticación y autorización de usuarios.
o	Validar los campos de entrada de las credenciales (ValidacionCampos).
o	Controlar los intentos fallidos de login (ControlIntentosFallidos).
o	Manejar la autenticación de roles para determinar los permisos de los usuarios (AutenticacionRoles).
o	Redirigir al usuario una vez que el acceso es concedido o denegado (RedireccionAcceso).
o	Actúa como un punto central para la validación de acceso.
•	Interfaces Ofrecidas: 
o	<<interface>> ILoginService: Esta interfaz define los métodos que otros componentes deben usar para solicitar servicios de login y autenticación. El componente loginAdministrador implementa esta interfaz, haciendo que sus funcionalidades sean accesibles.
•	Interfaces Requeridas: Ninguna directamente visible en el diagrama para Seguridad como un todo, aunque loginAdministrador podría internamente requerir acceso a una base de datos de usuarios, por ejemplo (implícito en el "Use" desde otros componentes).

2. Componente: AccesoSistema
•	Responsabilidades: 
o	Gestionar la vista o ventana de acceso del usuario (ventanaAcceso).
o	Permitir la selección de flotas activas (SelectorFlotasActivas).
o	Permitir la selección de flotas inactivas (SelectorFlotasInactivas).
o	Parece ser el punto de entrada inicial para la interacción del usuario con las flotas.
•	Interfaces Ofrecidas: Ninguna explícitamente definida en el diagrama.
•	Interfaces Requeridas: 
o	Use (ILoginService): Requiere los servicios de autenticación y validación ofrecidos por el componente Seguridad.

3. Componente: PanelesFlotas
•	Responsabilidades: 
o	panelGeneral: 
	Listar flotas (ListaFlotas).
	Filtrar flotas por estado (activas/inactivas) (FiltroEstado(Activa/Inactiva)).
	Ordenar flotas por placa (OrdenamientoPorPlaca).
	Actualizar la lista (BotonActualizarLista).
o	panelIndividual: 
	Visualizar detalles de una flota específica (VisualizacionDetalleFlota).
	Actualizar detalles de una flota individual (BotonActualizarIndividual).
	Volver a la vista general (BotonVolverGeneral).
o	gestionEstadoFlotas: 
	Cambiar el estado de una flota entre activa/inactiva (CambioActivoInactivo).
	Sincronizar listas de flotas (SincronizacionListas).
	Registrar un historial de cambios de estado (RegistroHistoricoEstados).
•	Interfaces Ofrecidas: 
o	<<interface>> IPanelFlotas: Interfaz para la gestión general de paneles de flotas.
o	<<interface>> IPanelFlota: Interfaz para operaciones sobre una flota individual.
o	<<interface>> IAccesoPaneles: Interfaz que posiblemente defina métodos para acceder a la funcionalidad de los paneles.
•	Interfaces Requeridas: 
o	Use (desde panelGeneral y gestionEstadoFlotas) a ILoginService: Implica que las operaciones en los paneles de flotas también requieren autenticación o validación de seguridad.
o	Use (desde panelGeneral y panelIndividual) a las interfaces de datos de la base de datos (implícito, pero se conecta a las tablas en el diagrama de despliegue).

4. Componente: Dashboard
•	Responsabilidades: 
o	Visualizar Indicadores Clave de Rendimiento (KPIs) (KPIsVisuales).
o	Mostrar información sobre la velocidad (Velocidad).
o	Mostrar información sobre la ubicación (Ubicacion).
o	Presentar alertas (Alertas).
o	Mostrar el cumplimiento de rotaciones (CumplimientosRotaciones).
•	Interfaces Ofrecidas: 
o	<<interface>> IDashboardService: Define los servicios para obtener y presentar datos del dashboard.
•	Interfaces Requeridas: 
o	Use (desde KPIsVisuales) a ILoginService: Requiere validación de seguridad para acceder a los KPIs.
o	Use (implícito) a los datos de la base de datos para obtener la información de KPIs.

5. Componente: Reportes
•	Responsabilidades: 
o	Generar reportes (generadorReportes).
o	Validar campos para la generación de reportes (ValidacionCampos).
o	Controlar intentos fallidos en la generación de reportes (ControlIntentosFallidos).
o	Autenticar roles para la generación de reportes (AutenticacionRoles).
o	Redirigir después de la generación o error (RedireccionAcceso).
•	Interfaces Ofrecidas: 
o	<<interface>> IReportService: Define los métodos para la generación y gestión de reportes.
•	Interfaces Requeridas: 
o	Use (desde generadorReportes) a ILoginService: Requiere autenticación y validación de seguridad para generar reportes.
o	Use (implícito) a los datos de la base de datos para obtener la información necesaria para los reportes.

6. Componente: Alertas
•	Responsabilidades: 
o	Activar un motor de alertas (motorAlertas).
o	Detectar anomalías (DeteccionAnomalias).
o	Generar alertas (GeneracionAlertas).
o	Recopilar datos detallados asociados a las alertas (placa, velocidad, ubicación, conductor) (DatosDetallados (placa, velocidad, ubicacion, conductor)).
o	Notificar al administrador sobre las alertas (NotificacionAdministrador).
•	Interfaces Ofrecidas: 
o	<<interface>> IAlertService: Define los servicios para la gestión y notificación de alertas.
•	Interfaces Requeridas: 
o	Use (desde motorAlertas) a ILoginService: Requiere validación de seguridad, posiblemente para acceder a configuraciones de alertas o perfiles de notificación.
o	Use (implícito) a los datos de la base de datos para obtener la información para la detección de anomalías y la generación de alertas.

---------------------------------------------------------------------------------------------------------------------

Descripción de Despliegue
El diagrama representa una arquitectura de despliegue con tres capas principales:

1.	Dispositivo Cliente (Mobile/Web):
o	Tipo: Clientes ligeros (aplicaciones móviles o interfaces web).
o	Componentes/Módulos: 
	Interfaz de Login
	Interfaz de Panel de Flotas
	Interfaz de Dashboard
	Interfaz de Reportes
o	Descripción: Esta capa representa los dispositivos finales desde donde los usuarios interactúan con la aplicación. Estos clientes acceden a la funcionalidad y presentación ofrecidas por la capa de "Servidor Web / Aplicación". La flecha unidireccional indica que el cliente inicia la comunicación.

2.	Servidor Web / Aplicación:
o	Tipo: Servidor que aloja la lógica de negocio, la presentación y la integración con la base de datos.
o	Componentes/Módulos: 
	Seguridad: 
	loginAdministrador: Componente central de seguridad para la autenticación y/o autorización. Múltiples módulos (PanelesFlotas, AccesoSistema, Dashboard, Reportes, Alertas) dependen de este para su funcionamiento (Use).
	PanelesFlotas: 
	panelGeneral
	panelIndividual
	gestionEstadoFlotas
	AccesoSistema: 
	ventanaAcceso
	Dashboard: 
	KPIsVisuales
	Reportes: 
	generadorReportes
	Alertas: 
	motorAlertas
o	Descripción: Esta es la capa central donde reside la lógica principal de la aplicación. Gestiona la seguridad (autenticación y autorización a través de loginAdministrador), el acceso al sistema, la visualización y gestión de flotas, la generación de dashboards y reportes, y el procesamiento de alertas. Todos estos módulos internos interactúan con la capa de Base de Datos para obtener o persistir información.

3.	Base de Datos:
o	Tipo: Servidor de gestión de bases de datos relacionales o no relacionales.
o	Componentes/Módulos: 
	tablaUsuarios
	tablaFlotas
	tablaReportes
	tablaAlertas
	tablaRotaciones
o	Descripción: Esta capa es responsable de la persistencia de los datos. Almacena toda la información operativa de la aplicación, incluyendo detalles de usuarios, flotas, reportes generados, alertas y registros de rotaciones. Los componentes del "Servidor Web / Aplicación" acceden a estas tablas para realizar operaciones de lectura y escritura (Use).


Relaciones y Redes:
•	La conexión entre "Dispositivo Cliente (Mobile/Web)" y "Servidor Web / Aplicación" representa la comunicación a través de una red (internet), usando protocolos como HTTP/HTTPS.
•	Las líneas punteadas con la etiqueta "Use" entre los componentes del "Servidor Web / Aplicación" y las "tablas" de la "Base de Datos" indican la interacción para el almacenamiento y recuperación de datos, lo que implica una conexión de red interna a través de JDBC

Tecnologías de Despliegue Previstas
Basándose en la estructura del diagrama, las siguientes tecnologías de despliegue serían apropiadas:
•	Contenerización (Docker):
o	Servidor Web / Aplicación: Los diferentes módulos dentro del "Servidor Web / Aplicación" (Seguridad, PanelesFlotas, AccesoSistema, Dashboard, Reportes, Alertas) se empaqueten como imágenes Docker. Esto permitiría un despliegue consistente, aislamiento de dependencias y portabilidad entre diferentes entornos (desarrollo, pruebas, producción).
•	CI/CD (Integración y Entrega Continua):
o	Plataformas como Jenkins, GitLab CI/CD, GitHub Actions, CircleCI o Azure DevOps se integrarían para automatizar el ciclo de vida del software: desde la compilación del código, la creación de imágenes Docker, la ejecución de pruebas, hasta el despliegue automático en los entornos de staging y producción.


